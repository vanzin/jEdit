<?xml version="1.0"?>

<!DOCTYPE MODE SYSTEM "xmode.dtd">

<!-- Pascal mode by Kristian Ovaska.
     Delphi 3 was used as reference. -->
<MODE>
	<PROPS>
		<PROPERTY NAME="commentStart" VALUE="{" />
		<PROPERTY NAME="commentEnd" VALUE="}" />
		<PROPERTY NAME="lineComment" VALUE="//" />
		<PROPERTY NAME="noWordSep" VALUE="_" />
	</PROPS>

	<RULES IGNORE_CASE="TRUE" HIGHLIGHT_DIGITS="TRUE">
		<WHITESPACE> </WHITESPACE>
		<WHITESPACE>	</WHITESPACE>

		<!-- Compiler directives. -->
		<SPAN TYPE="COMMENT2">
			<BEGIN>{$</BEGIN>
			<END>}</END>
		</SPAN>
		<SPAN TYPE="COMMENT2">
			<BEGIN>(*$</BEGIN>
			<END>*)</END>
		</SPAN>

		<!-- Normal comments. -->
		<SPAN TYPE="COMMENT1">
			<BEGIN>{</BEGIN>
			<END>}</END>
		</SPAN>

		<SPAN TYPE="COMMENT1">
			<BEGIN>(*</BEGIN>
			<END>*)</END>
		</SPAN>

		<EOL_SPAN TYPE="COMMENT1">//</EOL_SPAN>

		<SPAN TYPE="LITERAL1" NO_LINE_BREAK="TRUE">
			<BEGIN>'</BEGIN>
			<END>'</END>
		</SPAN>

		<SEQ TYPE="NULL">)</SEQ>
		<SEQ TYPE="NULL">(</SEQ>
		<SEQ TYPE="NULL">]</SEQ>
		<SEQ TYPE="NULL">[</SEQ>
		<SEQ TYPE="NULL">.</SEQ>
		<SEQ TYPE="NULL">,</SEQ>
		<SEQ TYPE="NULL">;</SEQ>
		<SEQ TYPE="OPERATOR">^</SEQ>
		<SEQ TYPE="OPERATOR">@</SEQ>
		<SEQ TYPE="OPERATOR">:=</SEQ>
		<SEQ TYPE="NULL">:</SEQ>
		<SEQ TYPE="OPERATOR">=</SEQ>
		<SEQ TYPE="OPERATOR">&lt;&gt;</SEQ>
		<SEQ TYPE="OPERATOR">&gt;</SEQ>
		<SEQ TYPE="OPERATOR">&lt;</SEQ>
		<SEQ TYPE="OPERATOR">&gt;=</SEQ>
		<SEQ TYPE="OPERATOR">&lt;=</SEQ>
		<SEQ TYPE="OPERATOR">+</SEQ>
		<SEQ TYPE="OPERATOR">-</SEQ>
		<SEQ TYPE="OPERATOR">/</SEQ>
		<SEQ TYPE="OPERATOR">*</SEQ>

		<KEYWORDS IGNORE_CASE="TRUE">
			<!-- Reserved words. Standard directives are not included, except
			  -- private, protected, public, published, and automated. -->
			<KEYWORD1>and</KEYWORD1>
			<KEYWORD1>array</KEYWORD1>
			<KEYWORD1>as</KEYWORD1>
			<KEYWORD1>asm</KEYWORD1>
			<KEYWORD1>automated</KEYWORD1>
			<KEYWORD1>begin</KEYWORD1>
			<KEYWORD1>case</KEYWORD1>
			<KEYWORD1>class</KEYWORD1>
			<KEYWORD1>const</KEYWORD1>
			<KEYWORD1>constructor</KEYWORD1>
			<KEYWORD1>destructor</KEYWORD1>
			<KEYWORD1>dispinterface</KEYWORD1>
			<KEYWORD1>div</KEYWORD1>
			<KEYWORD1>do</KEYWORD1>
			<KEYWORD1>downto</KEYWORD1>
			<KEYWORD1>else</KEYWORD1>
			<KEYWORD1>end</KEYWORD1>
			<KEYWORD1>except</KEYWORD1>
			<KEYWORD1>exports</KEYWORD1>
			<KEYWORD1>file</KEYWORD1>
			<KEYWORD1>finally</KEYWORD1>
			<KEYWORD1>for</KEYWORD1>
			<KEYWORD1>function</KEYWORD1>
			<KEYWORD1>goto</KEYWORD1>
			<KEYWORD1>if</KEYWORD1>
			<KEYWORD1>in</KEYWORD1>
			<KEYWORD1>inherited</KEYWORD1>
			<KEYWORD1>inline</KEYWORD1>
			<KEYWORD1>is</KEYWORD1>
			<KEYWORD1>label</KEYWORD1>
			<KEYWORD1>mod</KEYWORD1>
			<KEYWORD1>nil</KEYWORD1>
			<KEYWORD1>not</KEYWORD1>
			<KEYWORD1>object</KEYWORD1>
			<KEYWORD1>of</KEYWORD1>
			<KEYWORD1>or</KEYWORD1>
			<KEYWORD1>out</KEYWORD1>
			<KEYWORD1>packed</KEYWORD1>
			<KEYWORD1>private</KEYWORD1>
			<KEYWORD1>procedure</KEYWORD1>
			<KEYWORD1>property</KEYWORD1>
			<KEYWORD1>protected</KEYWORD1>
			<KEYWORD1>public</KEYWORD1>
			<KEYWORD1>published</KEYWORD1>
			<KEYWORD1>raise</KEYWORD1>
			<KEYWORD1>record</KEYWORD1>
			<KEYWORD1>repeat</KEYWORD1>
			<KEYWORD1>resourcestring</KEYWORD1>
			<KEYWORD1>set</KEYWORD1>
			<KEYWORD1>shl</KEYWORD1>
			<KEYWORD1>shr</KEYWORD1>
			<KEYWORD1>string</KEYWORD1>
			<KEYWORD1>stringresource</KEYWORD1>
			<KEYWORD1>then</KEYWORD1>
			<KEYWORD1>threadvar</KEYWORD1>
			<KEYWORD1>to</KEYWORD1>
			<KEYWORD1>try</KEYWORD1>
			<KEYWORD1>type</KEYWORD1>
			<KEYWORD1>until</KEYWORD1>
			<KEYWORD1>var</KEYWORD1>
			<KEYWORD1>while</KEYWORD1>
			<KEYWORD1>with</KEYWORD1>
			<KEYWORD1>xor</KEYWORD1>

			<KEYWORD2>finalization</KEYWORD2>
			<KEYWORD2>implementation</KEYWORD2>
			<KEYWORD2>interface</KEYWORD2>
			<KEYWORD2>initialization</KEYWORD2>
			<KEYWORD2>library</KEYWORD2>
			<KEYWORD2>program</KEYWORD2>
			<KEYWORD2>unit</KEYWORD2>
			<KEYWORD2>uses</KEYWORD2>

			<!-- Ordinal types. -->
			<KEYWORD3>shortint</KEYWORD3>
			<KEYWORD3>byte</KEYWORD3>
			<KEYWORD3>char</KEYWORD3>
			<KEYWORD3>smallint</KEYWORD3>
			<KEYWORD3>integer</KEYWORD3>
			<KEYWORD3>word</KEYWORD3>
			<KEYWORD3>longint</KEYWORD3>
			<KEYWORD3>cardinal</KEYWORD3>
			<!-- Boolean types. -->
			<KEYWORD3>boolean</KEYWORD3>
			<KEYWORD3>bytebool</KEYWORD3>
			<KEYWORD3>wordbool</KEYWORD3>
			<KEYWORD3>longbool</KEYWORD3>
			<!-- Real types. -->
			<KEYWORD3>real</KEYWORD3>
			<KEYWORD3>single</KEYWORD3>
			<KEYWORD3>double</KEYWORD3>
			<KEYWORD3>extended</KEYWORD3>
			<KEYWORD3>comp</KEYWORD3>
			<KEYWORD3>currency</KEYWORD3>
			<!-- Untyped pointer. -->
			<KEYWORD3>pointer</KEYWORD3>

			<LITERAL2>false</LITERAL2>
			<LITERAL2>nil</LITERAL2>
			<LITERAL2>self</LITERAL2>
			<LITERAL2>true</LITERAL2>
		</KEYWORDS>
	</RULES>
</MODE>
