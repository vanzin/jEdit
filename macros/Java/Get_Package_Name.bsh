/*
 * Get_Package_Name.bsh - a BeanShell macro script for the
 * jEdit text editor - insert package name based upon path
 * of current buffer
 * Copyright (C) 2001 John Gellene
 * jgellene@nyc.rr.com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * Based on code contributed by Richard Wan
 *
 * $Id$
 */


File getCanonicalFile(File file)
{
    try
    {
        return new File(file.getCanonicalPath());
    }
    catch(IOException e)
    {
        return new File(file.getAbsolutePath());
    }
}

File getRoot(File file)
{
    tokens = new StringTokenizer(System.getProperty("java.class.path"),
        File.pathSeparator);
    fileSet = new Hashtable();
    while(tokens.hasMoreTokens())
	{
		String tok = tokens.nextToken();
        fileSet.put(getCanonicalFile(new File(tok)), tok);
	}

    while(file != null)
    {
        if(fileSet.get(getCanonicalFile(file)) != null)
            break;
        parent = file.getParent();
        file = (parent != null) ? new File(parent) : null;
    }
    return file;
}


String determinePackageName(String path)
{
    pathFile = new File(buffer.getPath());
    File root = getRoot(pathFile);
    if(root == null)
        return null;
    parent = pathFile.getParent();
    packagePath = parent.substring(root.getPath().length(), parent.length());
    packagePath = packagePath.replace(File.separatorChar, '.');
    if (packagePath.endsWith("."))
    {
        packagePath = packagePath.substring(0, packagePath.length() - 1);
    }
    if (packagePath.startsWith("."))
    {
        packagePath = packagePath.substring(1, packagePath.length());
    }
    return packagePath;
}

// main routine
result = determinePackageName(buffer.getPath());
if(result == null)
{
    Macros.error(view, "Could not find a package name.");
}
else textArea.setSelectedText(result);

